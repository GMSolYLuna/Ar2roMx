<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<SolidColorBrush x:Key="StandardBorderBrush"
					 Color="DarkGray"></SolidColorBrush>
	<SolidColorBrush x:Key="StandardBrush"
					 Color="LightGray"></SolidColorBrush>
	<SolidColorBrush x:Key="PressedBrush"
					 Color="Gray"></SolidColorBrush>
	<SolidColorBrush x:Key="HoverBrush"
					 Color="#f1f1f1"></SolidColorBrush>
	<SolidColorBrush x:Key="GlyphBrush"
					 Color="#333333"></SolidColorBrush>

	<Style x:Key="VerticalScrollBarThumbStyle"
		   TargetType="{x:Type Thumb}">
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Margin"
				Value="1,0,1,0" />
		<Setter Property="BorderBrush"
				Value="{StaticResource StandardBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle Width="8"
							   Name="ellipse"
							   Stroke="{StaticResource StandardBorderBrush}"
							   Fill="{StaticResource StandardBrush}"
							   RadiusX="5"
							   RadiusY="5"></Rectangle>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="ellipse"
									Property="Fill"
									Value="{StaticResource HoverBrush}"></Setter>
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="True">
							<Setter TargetName="ellipse"
									Property="Fill"
									Value="{StaticResource PressedBrush}"></Setter>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarThumbStyle"
		   TargetType="{x:Type Thumb}">
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Margin"
				Value="0,1,0,1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource StandardBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle Height="8"
							   Name="ellipse"
							   Stroke="{StaticResource StandardBorderBrush}"
							   Fill="{StaticResource StandardBrush}"
							   RadiusX="5"
							   RadiusY="5"></Rectangle>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="ellipse"
									Property="Fill"
									Value="{StaticResource HoverBrush}"></Setter>
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="True">
							<Setter TargetName="ellipse"
									Property="Fill"
									Value="{StaticResource PressedBrush}"></Setter>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonUpStyle"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Margin="1"
						  Height="18">
						<Path Stretch="None"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  Name="Path"
							  Fill="{StaticResource StandardBrush}"
							  Data="M 0 8 L 8 8 L 4 0 Z"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource HoverBrush}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource PressedBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonDownStyle"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Margin="1"
						  Height="18">
						<Path Stretch="None"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  Name="Path"
							  Fill="{StaticResource StandardBrush}"
							  Data="M 0 0 L 4 8 L 8 0 Z"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource HoverBrush}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource PressedBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonLeftStyle"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Margin="1"
						  Width="18">
						<Path Stretch="None"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  Name="Path"
							  Fill="{StaticResource StandardBrush}"
							  Data="M 0 0 L -8 4 L 0 8 Z"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource HoverBrush}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource PressedBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonRightStyle"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Margin="1"
						  Width="18">
						<Path Stretch="None"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  Name="Path"
							  Fill="{StaticResource StandardBrush}"
							  Data="M 0 0 L 8 4 L 0 8 Z"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource HoverBrush}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Path"
									Property="Fill"
									Value="{StaticResource PressedBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarPageButtonStyle"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar"
					 TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="18" />
				<RowDefinition Height="*" />
				<RowDefinition MaxHeight="18" />
			</Grid.RowDefinitions>
			<Grid.Background>
				<LinearGradientBrush StartPoint="0,0"
									 EndPoint="0,1">
					<GradientStop Offset="0"
								  Color="#4c4c4c"></GradientStop>
					<GradientStop Offset="1"
								  Color="#434343"></GradientStop>
				</LinearGradientBrush>
			</Grid.Background>
			<RepeatButton Grid.Row="0"
						  Height="18"
						  Style="{StaticResource LineButtonUpStyle}"
						  Command="ScrollBar.LineUpCommand">

			</RepeatButton>

			<Track Name="PART_Track"
				   Grid.Row="1"
				   IsDirectionReversed="True">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageUpCommand"
								  Style="{StaticResource ScrollBarPageButtonStyle}">
					</RepeatButton>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource VerticalScrollBarThumbStyle}">
					</Thumb>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageDownCommand"
								  Style="{StaticResource ScrollBarPageButtonStyle}">
					</RepeatButton>
				</Track.IncreaseRepeatButton>
			</Track>

			<RepeatButton Grid.Row="2"
						  Height="18"
						  Style="{StaticResource LineButtonDownStyle}"
						  Command="ScrollBar.LineDownCommand">
			</RepeatButton>
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar"
					 TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition MaxWidth="18"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Grid.Background>
				<LinearGradientBrush StartPoint="0,0"
									 EndPoint="1,0">
					<GradientStop Offset="0"
								  Color="#4c4c4c"></GradientStop>
					<GradientStop Offset="1"
								  Color="#434343"></GradientStop>
				</LinearGradientBrush>
			</Grid.Background>
			<RepeatButton Grid.Column="0"
						  Width="18"
						  Style="{StaticResource LineButtonLeftStyle}"
						  Command="ScrollBar.LineLeftCommand">
			</RepeatButton>

			<Track Name="PART_Track"
				   Grid.Column="1"
				   IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageLeftCommand"
								  Style="{StaticResource ScrollBarPageButtonStyle}">
					</RepeatButton>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource HorizontalScrollBarThumbStyle}">
					</Thumb>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageRightCommand"
								  Style="{StaticResource ScrollBarPageButtonStyle}">
					</RepeatButton>
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Column="2"
						  Width="18"
						  Style="{StaticResource LineButtonRightStyle}"
						  Command="ScrollBar.LineRightCommand">
			</RepeatButton>
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Style.Triggers>
			<Trigger Property="Orientation"
					 Value="Vertical">
				<Setter Property="Width"
						Value="18" />
				<Setter Property="Height"
						Value="Auto" />
				<Setter Property="Template"
						Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation"
					 Value="Horizontal">
				<Setter Property="Width"
						Value="Auto" />
				<Setter Property="Height"
						Value="18" />
				<Setter Property="Template"
						Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TxtBoxStyle"
		   TargetType="{x:Type TextBoxBase}">
		<Setter Property="Foreground"
				Value="#f1f1f1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border Name="Border"
							Padding="2"
							Background="#666666"
							BorderBrush="White"
							BorderThickness="1">
						<ScrollViewer Margin="0"
									  x:Name="PART_ContentHost"
									  Style="{DynamicResource SimpleTextScrollViewer}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="None" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="AllowDrop"
				Value="True" />
	</Style>

	<Style x:Key="PwdBoxStyle"
		   TargetType="{x:Type PasswordBox}">
		<Setter Property="Foreground"
				Value="#f1f1f1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border Name="Border"
							Padding="2"
							Background="#666666"
							BorderBrush="White"
							BorderThickness="1">
						<ScrollViewer Margin="0"
									  x:Name="PART_ContentHost"
									  Style="{DynamicResource SimpleTextScrollViewer}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="None" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="AllowDrop"
				Value="True" />
	</Style>


	<Style x:Key="BtnStyle"
		   TargetType="{x:Type Button}">
		<Setter Property="Foreground"
				Value="#e8e8e8" />
		<Setter Property="BorderThickness"
				Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border"
							CornerRadius="2"
							BorderThickness="1"
							BorderBrush="#3d3d3d">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1"
												 StartPoint="0.5,0.3">
								<GradientStop Color="#008fcb"
											  Offset="0.5" />
								<GradientStop Color="#006a96"
											  Offset="0.5" />
							</LinearGradientBrush>
						</Border.Background>
						<ContentPresenter Margin="2"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused"
								 Value="true">
							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="#202020" />
						</Trigger>
						<Trigger Property="IsDefaulted"
								 Value="true">
							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="#202020" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="Border"
									Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0.3">
										<GradientStop Color="#7a7a7a"
													  Offset="0.3" />
										<GradientStop Color="#3e3e3e"
													  Offset="0.5" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Foreground"
									Value="White" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Border"
									Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0.3">
										<GradientStop Color="#008fcb"
													  Offset="0.3" />
										<GradientStop Color="#006a96"
													  Offset="0.5" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="#606060" />
							<Setter Property="Foreground"
									Value="White" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter TargetName="Border"
									Property="Background"
									Value="#EEEEEE" />
							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="#AAAAAA" />
							<Setter Property="Foreground"
									Value="#888888" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="LinkButtonStyle"
		   TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock TextDecorations="Underline">
						<ContentPresenter />
					</TextBlock>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Foreground"
				Value="#FFFF7500" />
		<Setter Property="Cursor"
				Value="Hand" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Foreground"
						Value="Red" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<SolidColorBrush x:Key="TabControlNormalBorderBrush"
					 Color="#8C8E94" />




	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<TabPanel Grid.Row="0"
								  Panel.ZIndex="1"
								  IsItemsHost="True"
								  Background="Transparent" />
						<Border Grid.Row="1"
								BorderBrush="Black"
								BorderThickness="0"
								CornerRadius="0, 12, 12, 12">
							<ContentPresenter ContentSource="SelectedContent" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TabItem}">
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Padding"
				Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border Name="Border"
								BorderBrush="Black"
								BorderThickness="1,1,1,0"
								CornerRadius="4,4,0,0">
							<ContentPresenter x:Name="ContentSite"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Center"
											  ContentSource="Header"
											  Margin="12,2,12,2" />
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1"
													 StartPoint="0.5,0.3">
									<GradientStop Color="#cdcdcd"
												  Offset="0.5" />
									<GradientStop Color="#919292"
												  Offset="0.5" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected"
								 Value="True">
							<Setter TargetName="Border"
									Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0.3">
										<GradientStop Color="#cdcdcd"
													  Offset="0.5" />
										<GradientStop Color="#919292"
													  Offset="0.5" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Foreground"
									Value="#474747" />
						</Trigger>
                        <Trigger Property="IsSelected"
								 Value="False">
							<Setter TargetName="Border"
									Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0.3">
										<GradientStop Color="#008fcb"
													  Offset="0.5" />
										<GradientStop Color="#006a96"
													  Offset="0.5" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Foreground"
									Value="White" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AlternateColorListViewItems"
		   TargetType="{x:Type ListBoxItem}">
		<Style.Triggers>
			<Trigger Property="ItemsControl.AlternationIndex"
					 Value="1">
				<Setter Property="Background"
						Value="#646464"></Setter>
			</Trigger>
			<Trigger Property="ItemsControl.AlternationIndex"
					 Value="2">
				<Setter Property="Background"
						Value="White"></Setter>
			</Trigger>
		</Style.Triggers>
		<Setter Property="Height"
				Value="Auto" />
	</Style>
</ResourceDictionary>